name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
          - os: macos-latest
            rust_target: universal-apple-darwin
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.platform }}
    steps:
      - name: "[Setup | All] Checkout repository"
        uses: actions/checkout@v4
      #
      - name: "[Setup | All] Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.0"
      #
      # - name: "[Setup | All] Install Rust stable"
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: stable
      #
      - name: "[Setup | Ubuntu] Install Dependencies"
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      #
      - name: "[Setup | All] Install Project Dependencies"
        run: npm install
      #
      - name: "[Build | All] Build Tauri App"
        run: npm run build
      #
      - name: "[Upload Artifact | Windows] exe File"
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: MCCManager 1.0 Windows Debug exe File
          path: |
            D:/a/MCCManager/MCCManager/src-tauri/target/release/mccmanager.exe
      #
      - name: "[Upload Artifact | Windows] msi Installer"
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: MCCManager 1.0 Windows msi Installer
          path: |
            D:\a\MCCManager\MCCManager\src-tauri\target\release\bundle\msi\mccmanager_1.0.0_x64_en-US.msi
      #
      - name: "[Upload Artifact | Windows] exe Installer"
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: MCCManager 1.0 Windows exe Installer
          path: |
            D:\a\MCCManager\MCCManager\src-tauri\target\release\bundle\nsis\mccmanager_1.0.0_x64-setup.exe
      #
      - name: "[Upload Artifact | MacOS] app File"
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: MCCManager 1.0 MacOS app File
          path: |
            /Users/runner/work/MCCManager/MCCManager/src-tauri/target/release/bundle/macos/mccmanager.app
      #
      - name: "[Upload Artifact | MacOS] dmg File"
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: MCCManager 1.0 MacOS dmg File
          path: |
            /Users/runner/work/MCCManager/MCCManager/src-tauri/target/release/bundle/dmg/mccmanager_1.0.0_aarch64.dmg
      #
      - name: "[Upload Artifact | Linux] deb File"
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: MCCManager 1.0 Linux deb File
          path: |
            /home/runner/work/MCCManager/MCCManager/src-tauri/target/release/bundle/deb/mccmanager_1.0.0_amd64.deb
      #
      - name: "[Upload Artifact | Linux] AppImage File"
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: MCCManager 1.0 Linux AppImage File
          path: |
            /home/runner/work/MCCManager/MCCManager/src-tauri/target/release/bundle/appimage/mccmanager_1.0.0_amd64.AppImage
